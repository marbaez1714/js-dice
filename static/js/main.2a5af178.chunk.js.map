{"version":3,"sources":["components/Dice.js","components/DiceTray.js","App.js","serviceWorker.js","index.js"],"names":["Dice","props","number","findPip","pips","reduce","included","pip","react_default","a","createElement","className","concat","num","findAnimation","DiceTray","prosp","_useState","useState","_useState2","Object","slicedToArray","numberOfDice","setNumberOfDice","_useState3","_useState4","diceArray","setDiceArray","_useState5","_useState6","numberArray","setNumberArray","value","onChange","e","target","onClick","dArray","numArray","one","two","three","four","five","six","i","randomNumber","Math","floor","random","push","console","log","createDice","App","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a5af178.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Dice(props) {\r\n  const { number } = props;\r\n\r\n  const findPip = pips => {\r\n    const isFilled = pips.reduce((included, pip) => (pip === number ? true : included), false);\r\n    const pipName = isFilled ? \"diePip\" : \"\";\r\n    return pipName;\r\n  };\r\n\r\n  const findAnimation = num => {\r\n    switch (num) {\r\n      case 1:\r\n        return \"one\";\r\n      case 2:\r\n        return \"two\";\r\n      case 3:\r\n        return \"three\";\r\n      case 4:\r\n        return \"four\";\r\n      case 5:\r\n        return \"five\";\r\n      case 6:\r\n        return \"six\";\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`dieBox ${findAnimation(number)}`}>\r\n      <div className=\"dieCol left\">\r\n        <div className={`dieGrid ${findPip([2, 3, 4, 5, 6])}`} />\r\n        <div className=\"dieGrid\" />\r\n        <div className={`dieGrid ${findPip([6])}`} />\r\n        <div className=\"dieGrid\" />\r\n        <div className={`dieGrid ${findPip([4, 5, 6])}`} />\r\n      </div>\r\n      <div className=\"dieCol filler\" />\r\n      <div className=\"dieCol \">\r\n        <div className=\"dieGrid\" />\r\n        <div className=\"dieGrid\" />\r\n        <div className={`dieGrid ${findPip([1, 3, 5])} `} />\r\n        <div className=\"dieGrid\" />\r\n        <div className=\"dieGrid\" />\r\n      </div>\r\n      <div className=\"dieCol filler\" />\r\n      <div className=\"dieCol \">\r\n        <div className={`dieGrid ${findPip([4, 5, 6])}`} />\r\n        <div className=\"dieGrid\" />\r\n        <div className={`dieGrid ${findPip([6])}`} />\r\n        <div className=\"dieGrid\" />\r\n        <div className={`dieGrid ${findPip([2, 3, 4, 5, 6])}`} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Dice from \"./Dice\";\r\n\r\nexport default function DiceTray(prosp) {\r\n  const [numberOfDice, setNumberOfDice] = useState(1);\r\n  const [diceArray, setDiceArray] = useState([]);\r\n  const [numberArray, setNumberArray] = useState({});\r\n\r\n  const createDice = () => {\r\n    const dArray = [];\r\n    const numArray = {\r\n      one: 0,\r\n      two: 0,\r\n      three: 0,\r\n      four: 0,\r\n      five: 0,\r\n      six: 0\r\n    };\r\n    for (let i = 0; i < numberOfDice; i++) {\r\n      const randomNumber = Math.floor(Math.random() * 6) + 1;\r\n      randomNumber === 1 && numArray.one++;\r\n      randomNumber === 2 && numArray.two++;\r\n      randomNumber === 3 && numArray.three++;\r\n      randomNumber === 4 && numArray.four++;\r\n      randomNumber === 5 && numArray.five++;\r\n      randomNumber === 6 && numArray.six++;\r\n      dArray.push(<Dice number={randomNumber} />);\r\n    }\r\n    setNumberArray(numArray);\r\n    setDiceArray(dArray);\r\n    console.log(numArray);\r\n  };\r\n\r\n  return (\r\n    <div className=\"diceTray\">\r\n      <div className=\"inputRow\">\r\n        Enter Number of Dice\r\n        <input value={numberOfDice} onChange={e => setNumberOfDice(e.target.value)} />\r\n        <button onClick={() => createDice()}>ROLL</button>\r\n        <div>\r\n          {numberArray.one > 0 && (\r\n            <div className=\"number\">\r\n              One : <span className=\"numberFound\">{numberArray.one}</span>\r\n            </div>\r\n          )}\r\n          {numberArray.two > 0 && (\r\n            <div className=\"number\">\r\n              Two : <span className=\"numberFound\">{numberArray.two}</span>\r\n            </div>\r\n          )}\r\n          {numberArray.three > 0 && (\r\n            <div className=\"number\">\r\n              Three : <span className=\"numberFound\">{numberArray.three}</span>\r\n            </div>\r\n          )}\r\n          {numberArray.four > 0 && (\r\n            <div className=\"number\">\r\n              Four : <span className=\"numberFound\">{numberArray.four}</span>\r\n            </div>\r\n          )}\r\n          {numberArray.five > 0 && (\r\n            <div className=\"number\">\r\n              Five : <span className=\"numberFound\">{numberArray.five}</span>\r\n            </div>\r\n          )}\r\n          {numberArray.six > 0 && (\r\n            <div className=\"number\">\r\n              Six : <span className=\"numberFound\">{numberArray.six}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"diceContainer\">{diceArray}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Dice from \"./components/Dice\";\nimport DiceTray from \"./components/DiceTray\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p> JSDice! </p>\n      </header>\n      <DiceTray />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}